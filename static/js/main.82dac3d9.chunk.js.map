{"version":3,"sources":["components/Home/Home.tsx","components/Todo/Todo.tsx","components/MineSweeper/Screen/CustomGameDataField.tsx","components/MineSweeper/MineSweeperData.ts","components/MineSweeper/Screen/Selection.tsx","components/MineSweeper/Screen/StartBtn.tsx","components/MineSweeper/Screen/GameInfo.tsx","components/MineSweeper/Screen/Game.tsx","components/MineSweeper/MineSweeper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","to","Todo","CustomGameDataField","id","className","type","value","levels","초급","중급","고급","initGameData","selectLevel","flagCnt","bombCnt","time","blankCnt","row","col","isGameStart","isGameOver","dir","Selection","currentLevel","onLevelChangeListener","levelItemComponents","level","push","onChange","e","currentTarget","StartBtn","onStartBtnClickListener","onClick","GameInfo","gameData","Game","gridClickListener","gridRightClickListener","processBomb","arr","i","j","cnt","forEach","ny","nx","tdWidth","tdHeight","bombArr","temp","Array","length","Math","floor","random","ret","from","idx","createBomb","TableItems","ypos","trItems","xpos","tdElement","height","width","onContextMenu","custom-value","MineSweeper","useState","setGameData","newLevel","newRow","newCol","newBombCnt","preventDefault","innerText","style","backgroundColor","textNode","childNodes","getAttribute","idName","split","parseInt","nextNode","document","getElementById","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.82dac3d9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Home() {\r\n    return (\r\n        <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/todo\">Todo</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/MineSweeper\">MineSweeper</Link>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction Todo (){\r\n    return (\r\n        <div>\r\n            Todo Application\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n\r\nfunction CustomGameDataField() {\r\n    return (\r\n        <div id=\"custom_Game_Field\">\r\n            <div id=\"custom_Width\">\r\n                <span className=\"custom_Game_Field_Title\">가로</span>   \r\n                <input\r\n                    type=\"number\"\r\n                    id=\"rowInput\"\r\n                    value={10}\r\n                />\r\n            </div>\r\n            <div id=\"custom_Height\">\r\n                <span className=\"custom_Game_Field_Title\">세로</span>   \r\n                <input\r\n                    type=\"number\"\r\n                    id=\"heightInput\"\r\n                    value={10}\r\n                />\r\n            </div>\r\n            <div id=\"custom_Bomb\">\r\n                <span className=\"custom_Game_Field_Title\">폭탄</span>   \r\n                <input\r\n                    type=\"number\"\r\n                    id=\"bombInput\"\r\n                    value={10}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomGameDataField;","export interface gameDataInterface {\r\n  selectLevel: string;\r\n  flagCnt: number;\r\n  bombCnt: number;\r\n  time: number;\r\n  blankCnt: number;\r\n  row: number;\r\n  col: number;\r\n  isGameStart: boolean;\r\n  isGameOver: boolean;\r\n}\r\nexport const levels: { [index: string]: Array<number> } = {\r\n  초급: [10, 10, 10],\r\n  중급: [15, 15, 20],\r\n  고급: [20, 20, 40],\r\n  \"사용자 설정\": [0, 0, 0],\r\n};\r\nexport const width: number = 300,\r\n  height: number = 300;\r\nexport const initGameData: gameDataInterface = {\r\n  selectLevel: \"초급\",\r\n  flagCnt: 10,\r\n  bombCnt: 10,\r\n  time: 0,\r\n  blankCnt: 0,\r\n  row: 10,\r\n  col: 10,\r\n  isGameStart: false,\r\n  isGameOver : false,\r\n};\r\nexport const dir = [\r\n  [0, 1],\r\n  [0, -1],\r\n  [1, 0],\r\n  [-1, 0],\r\n  [1, 1],\r\n  [1, -1],\r\n  [-1, 1],\r\n  [-1, -1],\r\n];\r\n","import React from 'react';\r\nimport {levels} from '../MineSweeperData';\r\ninterface SelectionProp {\r\n    currentLevel : string,\r\n    onLevelChangeListener: Function,\r\n}\r\n\r\nfunction Selection({currentLevel,onLevelChangeListener}: SelectionProp) {\r\n    const levelItemComponents = [];\r\n    for(const level in levels) {\r\n        levelItemComponents.push(\r\n            <option\r\n                key={level}\r\n            > {level}\r\n            </option>\r\n        )\r\n    }\r\n    return (\r\n        <select \r\n            id=\"level_select\"\r\n            onChange={(e)=>onLevelChangeListener(e.currentTarget.value)}\r\n        >\r\n            {levelItemComponents}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Selection;","import React from 'react';\r\n\r\nfunction StartBtn({onStartBtnClickListener}:{onStartBtnClickListener: Function}) {\r\n    return (\r\n        <button \r\n        id=\"startBtn\"\r\n        onClick={()=>onStartBtnClickListener()}\r\n        >\r\n            시작\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default StartBtn;","import React from 'react';\r\nimport { gameDataInterface } from '../MineSweeperData';\r\n\r\nfunction GameInfo({gameData}: {gameData: gameDataInterface}) {\r\n    return (\r\n        <div id=\"game_info\">\r\n            <div id=\"flag_data\">\r\n                {`🚩 ${gameData.flagCnt}`}\r\n            </div>\r\n            <div id=\"bomb_data\">\r\n                {`💣 ${gameData.bombCnt}`}\r\n            </div>\r\n            <div id=\"time_data\">\r\n                {`시간 ${gameData.time}`}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GameInfo;","import React from 'react';\r\nimport { height, width, dir } from '../MineSweeperData';\r\ninterface GameProp {\r\n  row: number,\r\n  col: number,\r\n  bombCnt: number,\r\n  gridRightClickListener : Function,\r\n  gridClickListener: Function,\r\n}\r\n\r\nfunction Game({ row, col, bombCnt, gridClickListener, gridRightClickListener }: GameProp) {\r\n  const createBomb = () => {\r\n    let temp = new Array<string>();\r\n    for (let i = 0; i < bombCnt; i++) temp.push(\"💣\");\r\n    for (let i = 0; i < row * col - bombCnt; i++) temp.push(\"0\");\r\n    // shuffle\r\n    for (let i = temp.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [temp[i], temp[j]] = [temp[j], temp[i]];\r\n    }\r\n    // ** promise 자체에 대한 미숙한 사용때문에 계속해서 proxy에서 받아오는것이 잘 안됨\r\n    let ret = Array.from(Array(row), () => new Array(col));\r\n    temp.forEach((value, idx) => (ret[Math.floor(idx / row)][idx % row] = value));\r\n    processBomb(ret);\r\n    return ret;\r\n  };\r\n  const processBomb = (arr: Array<any>) => {\r\n    for (let i = 0; i < row; i++)\r\n      for (let j = 0; j < col; j++) {\r\n        if (arr[i][j] === \"💣\") continue;\r\n        let cnt = 0;\r\n        dir.forEach((value) => {\r\n          let ny = i + value[0],\r\n            nx = j + value[1];\r\n          if (0 <= ny && ny < row && 0 <= nx && nx < col)\r\n            if (arr[ny][nx] === \"💣\") cnt++;\r\n        });\r\n        arr[i][j] = cnt ? `${cnt}` : \"0\";\r\n      }\r\n  };\r\n  const tdWidth = width / col;\r\n  const tdHeight = height / row;\r\n  const bombArr = createBomb();\r\n  let TableItems = [];\r\n  for (let ypos = 0; ypos < row; ypos++) {\r\n    const trItems = [];\r\n    for (let xpos = 0; xpos < col; xpos++) {\r\n      const tdElement = <td\r\n        height={`${tdHeight}`}\r\n        width={`${tdWidth}`}\r\n        id={`${ypos}_${xpos}`}\r\n        key={`${ypos}_${xpos}`}\r\n        onContextMenu={(e)=>gridRightClickListener(e)}\r\n        onClick={(e)=>gridClickListener(e.currentTarget)}\r\n      >\r\n        <span custom-value={`${bombArr[ypos][xpos]}`} />\r\n      </td>;\r\n      trItems.push(tdElement);\r\n    }\r\n    TableItems.push(\r\n      <tr key={ypos}>\r\n        {trItems}\r\n      </tr>\r\n    )\r\n  };\r\n  return (\r\n      <table>\r\n        <tbody>\r\n          {TableItems}\r\n        </tbody>\r\n      </table>\r\n  );\r\n}\r\n\r\nexport default Game;","import React, { useState } from 'react';\r\nimport CustomGameDataField from './Screen/CustomGameDataField';\r\nimport \"./MineSweeper.css\";\r\nimport { initGameData, gameDataInterface, levels, dir } from './MineSweeperData';\r\nimport Selection from './Screen/Selection';\r\nimport StartBtn from './Screen/StartBtn';\r\nimport GameInfo from './Screen/GameInfo';\r\nimport Game from './Screen/Game';\r\n\r\nfunction MineSweeper() {\r\n    const [gameData, setGameData]: [gameDataInterface, Function] = useState(initGameData);\r\n\r\n    const onLevelChangeListener = (newLevel: string) => {\r\n        const [newRow, newCol, newBombCnt]: Array<number> = levels[`${newLevel}`];\r\n\r\n        setGameData({\r\n            ...gameData,\r\n            row: newRow,\r\n            col: newCol,\r\n            bombCnt: newBombCnt,\r\n            selectLevel: `${newLevel}`\r\n        });\r\n    };\r\n\r\n    const checkValidGame: () => boolean = () => {\r\n        if (gameData.selectLevel !== \"사용자 설정\") return true;\r\n        const isBombCntOver: number = gameData.row * gameData.col - gameData.bombCnt;\r\n        return isBombCntOver ? true : false;\r\n    };\r\n\r\n    const onStartBtnClickListener = () => {\r\n        if (!checkValidGame()) return;\r\n        setGameData({\r\n            ...gameData,\r\n            isGameStart: true,\r\n        })\r\n    };\r\n\r\n    const gridRightClickListener = (e: any) => {\r\n        e.preventDefault();\r\n        if (gameData.flagCnt <= 0) return;\r\n        e.currentTarget.innerText = `🚩`;\r\n        setGameData({\r\n            ...gameData,\r\n            flagCnt: gameData.flagCnt - 1,\r\n        });\r\n    };\r\n\r\n    const gridClickListener = (currentTarget: any) => {\r\n        if (currentTarget.style.backgroundColor === \"white\") return;\r\n        currentTarget.style.backgroundColor = \"white\";\r\n        const textNode =currentTarget.childNodes[0];\r\n        setGameData({\r\n            ...gameData,\r\n            blankCnt: gameData.blankCnt + 1,\r\n        });\r\n        textNode.innerText = textNode.getAttribute('custom-value');\r\n        if (textNode.innerText === \"💣\") {\r\n            setGameData({\r\n                ...gameData,\r\n                isGameOver: true,\r\n            })\r\n            return;\r\n        }\r\n        if (textNode.innerText === \"0\") {\r\n            textNode.innerText = '';\r\n            const idName = currentTarget.id.split(\"_\");\r\n            const ypos = parseInt(idName[0]);\r\n            const xpos = parseInt(idName[1]);\r\n            dir.forEach((value) => {\r\n                const ny = value[0] + ypos,\r\n                    nx = value[1] + xpos;\r\n                if (0 <= ny && ny < gameData.row && 0 <= nx && nx < gameData.col) {\r\n                    const nextNode = document.getElementById(`${ny}_${nx}`);\r\n                    if (nextNode != null) {\r\n                        const nextTextNode = nextNode.childNodes[0] as Element;\r\n                        if (nextTextNode.getAttribute('custom-value') !== \"💣\") {\r\n                            gridClickListener(nextNode);\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return;\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <header id=\"header\">\r\n                <h1>지뢰찾기</h1>\r\n            </header>\r\n            <nav id=\"nav\">\r\n                <Selection\r\n                    currentLevel={gameData.selectLevel}\r\n                    onLevelChangeListener={onLevelChangeListener}\r\n                />\r\n                {\r\n                    (gameData.selectLevel === \"사용자 설정\" && gameData.isGameStart === false) &&\r\n                    <CustomGameDataField />\r\n                }\r\n                {\r\n                    gameData.isGameStart === true &&\r\n                    <GameInfo\r\n                        gameData={gameData}\r\n                    />\r\n                }\r\n                <StartBtn\r\n                    onStartBtnClickListener={onStartBtnClickListener}\r\n                />\r\n            </nav>\r\n            <section>\r\n                {\r\n                    gameData.isGameStart === true &&\r\n                    <Game\r\n                        row={gameData.row}\r\n                        col={gameData.col}\r\n                        bombCnt={gameData.bombCnt}\r\n                        gridRightClickListener={gridRightClickListener}\r\n                        gridClickListener={gridClickListener}\r\n                    />\r\n                }\r\n            </section>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MineSweeper;","import React from 'react';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from './components/Home/Home';\nimport Todo from './components/Todo/Todo'\nimport MineSweeper from './components/MineSweeper/MineSweeper';\n\n\nfunction App() {\n  return (\n    <Router>\n        <Switch>\n          <Route path=\"/todo\">\n            <Todo />\n          </Route>\n          <Route path=\"/MineSweeper\">\n            <MineSweeper />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}