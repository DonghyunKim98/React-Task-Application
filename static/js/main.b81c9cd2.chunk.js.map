{"version":3,"sources":["components/Home/Home.tsx","components/Todo/Todo.tsx","components/MineSweeper/Screens/CustomGameDataField.tsx","components/MineSweeper/static/MineSweeperData.ts","components/MineSweeper/static/StaticData.ts","components/MineSweeper/Screens/Selection.tsx","components/MineSweeper/Screens/StartBtn.tsx","components/MineSweeper/Screens/GameInfo.tsx","components/MineSweeper/Screens/Game.tsx","components/MineSweeper/static/HookStateData.ts","components/MineSweeper/MineSweeper.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","to","Todo","CustomGameDataField","MineSweeperData","customData","onChangeListener","id","className","type","onChange","e","row","parseInt","currentTarget","value","col","MineCnt","levels","초급","중급","고급","dir","createMineSweeperData","temp","i","push","length","j","Math","floor","random","Array","from","forEach","idx","arr","cnt","ny","nx","processMine","Selection","currentLevel","onLevelChangeListener","levelItemComponents","level","StartBtn","onStartBtnClickListener","onClick","GameInfo","gameData","gameDefaultData","time","flagCnt","Game","gridClickListener","gridRightClickListener","tdWidth","tdHeight","TableItems","ypos","trItems","xpos","tdElement","height","width","onContextMenu","custom-value","initGameDefaultData","selectLevel","initGameData","blankCnt","initCustomData","initgameProcessData","isGameStart","isGameOver","isPlayerWinGame","MineSweeper","useState","setGameData","setTime","setGameDefaultData","setCustomData","gameProcessData","setGameProcessData","useEffect","tick","setTimeout","clearTimeout","alert","newLevel","newRow","newCol","newMineAndFlagCnt","preventDefault","target","innerText","style","backgroundColor","isClicked","isRightClicked","textNodeElement","childNodes","textNodeHTMLElement","getAttribute","idName","split","nextNode","document","getElementById","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b81c9cd2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Home() {\r\n\treturn (\r\n\t\t<nav>\r\n\t\t\t<ul>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/\">Home</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/todo\">Todo</Link>\r\n\t\t\t\t</li>\r\n\t\t\t\t<li>\r\n\t\t\t\t\t<Link to=\"/MineSweeper\">MineSweeper</Link>\r\n\t\t\t\t</li>\r\n\t\t\t</ul>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default Home;\n","import React from \"react\";\r\n\r\nfunction Todo() {\r\n\treturn (\r\n\t\t<div>\r\n            Todo Application\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Todo;\n","import React from \"react\";\r\nimport {customDataInterface} from \"../static/hookStateData\";\r\n\r\nfunction CustomGameDataField({customData, onChangeListener}: {customData: customDataInterface, onChangeListener: Function}) {\r\n\treturn (\r\n\t\t<div id=\"custom_Game_Field\">\r\n\t\t\t<div id=\"custom_Width\">\r\n\t\t\t\t<span className=\"custom_Game_Field_Title\">가로</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"rowInput\"\r\n\t\t\t\t\tonChange={e => {\r\n\t\t\t\t\t\tonChangeListener({\r\n\t\t\t\t\t\t\t...customData,\r\n\t\t\t\t\t\t\trow: parseInt(e.currentTarget.value, 10),\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"custom_Height\">\r\n\t\t\t\t<span className=\"custom_Game_Field_Title\">세로</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"heightInput\"\r\n\t\t\t\t\tonChange={e => onChangeListener({\r\n\t\t\t\t\t\t...customData,\r\n\t\t\t\t\t\tcol: parseInt(e.currentTarget.value, 10),\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"custom_Mine\">\r\n\t\t\t\t<span className=\"custom_Game_Field_Title\">폭탄</span>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\tid=\"MineInput\"\r\n\t\t\t\t\tonChange={e => onChangeListener({\r\n\t\t\t\t\t\t...customData,\r\n\t\t\t\t\t\tMineCnt: parseInt(e.currentTarget.value, 10),\r\n\t\t\t\t\t})}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CustomGameDataField;\r\n","import {dir} from \"./StaticData\";\n\nexport let MineSweeperData: string[][];\nexport const createMineSweeperData = (\n\trow: number,\n\tcol: number,\n\tMineCnt: number,\n) => {\n\tconst processMine = (arr: string[][]) => {\n\t\tfor (let i : number = 0; i < row; i++) {\n\t\t\tfor (let j : number = 0; j < col; j++) {\n\t\t\t\tif (arr[i][j] === \"💣\") continue;\n\t\t\t\tlet cnt = 0;\n\n\t\t\t\tdir.forEach(value => {\n\t\t\t\t\tconst ny = i + value[0];\n\t\t\t\t\tconst nx = j + value[1];\n\n\t\t\t\t\tif (ny >= 0 && ny < row && nx >= 0 && nx < col) { if (arr[ny][nx] === \"💣\") cnt++; }\n\t\t\t\t});\n\t\t\t\tarr[i][j] = cnt > 0 ? `${cnt}` : \"0\";\n\t\t\t}\n\t\t}\n\t};\n\tconst temp : string[] = [];\n\n\tfor (let i = 0; i < MineCnt; i++) temp.push(\"💣\");\n\tfor (let i = 0; i < row * col - MineCnt; i++) temp.push(\"0\");\n\tfor (let i = temp.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\n\t\t[temp[i], temp[j]] = [temp[j], temp[i]];\n\t}\n\tMineSweeperData = Array.from(Array<string>(row), () => new Array<string>(col));\n\n\ttemp.forEach((value, idx) => (MineSweeperData[Math.floor(idx / row)][idx % row] = value));\n\tprocessMine(MineSweeperData);\n};\n","export const levels: { [key: string]: Array<number> } = {\n\t초급: [10, 10, 10],\n\t중급: [15, 15, 20],\n\t고급: [20, 20, 40],\n\t\"사용자 설정\": [0, 0, 0],\n};\nexport const width: number = 300;\nexport const height: number = 300;\n\nexport const dir = [[0, 1], [0, -1], [1, 0], [-1, 0], [1, 1], [1, -1], [-1, 1], [-1, -1]];\n","import React from \"react\";\r\nimport {levels} from \"../static/StaticData\";\r\n\r\ninterface SelectionProp {\r\n    currentLevel : string,\r\n    onLevelChangeListener: Function,\r\n}\r\n\r\nfunction Selection({currentLevel, onLevelChangeListener}: SelectionProp) {\r\n\t// eslint-disable-next-line no-undef\r\n\tconst levelItemComponents : JSX.Element[] = [];\r\n\r\n\tfor (const level in levels) {\r\n\t\tlevelItemComponents.push(\r\n\t\t\t<option\r\n\t\t\t\tkey={level}\r\n\t\t\t> {level}\r\n\t\t\t</option>,\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<select\r\n\t\t\tid=\"level_select\"\r\n\t\t\tonChange={e => onLevelChangeListener(e.currentTarget.value)}\r\n\t\t>\r\n\t\t\t{levelItemComponents}\r\n\t\t</select>\r\n\t);\r\n}\r\n\r\nexport default Selection;\r\n","import React from \"react\";\r\n\r\nfunction StartBtn({onStartBtnClickListener}:{onStartBtnClickListener: Function}) {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tid=\"startBtn\"\r\n\t\t\tonClick={() => onStartBtnClickListener()}\r\n\t\t>\r\n            시작\r\n\t\t</button>\r\n\t);\r\n}\r\n\r\nexport default StartBtn;\n","import React from \"react\";\r\nimport {gameDataInterface, gameDefaultDataInterface} from \"../static/HookStateData\";\r\n\r\n\r\nfunction GameInfo({gameData, gameDefaultData, time}: {gameData: gameDataInterface, gameDefaultData: gameDefaultDataInterface, time: number}) {\r\n\treturn (\r\n\t\t<div id=\"game_info\">\r\n\t\t\t<div id=\"flag_data\">\r\n\t\t\t\t{`🚩 ${gameData.flagCnt}`}\r\n\t\t\t</div>\r\n\t\t\t<div id=\"Mine_data\">\r\n\t\t\t\t{`💣 ${gameDefaultData.MineCnt}`}\r\n\t\t\t</div>\r\n\t\t\t<div id=\"time_data\">\r\n\t\t\t\t{`시간 ${time}`}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GameInfo;\r\n","/* eslint-disable no-undef */\r\nimport React from \"react\";\r\nimport {MineSweeperData} from \"../static/MineSweeperData\";\r\nimport {height, width} from \"../static/StaticData\";\r\n\r\ninterface GameProp {\r\n  row: number,\r\n  col: number,\r\n  gridRightClickListener: Function,\r\n  gridClickListener: Function,\r\n}\r\n\r\nfunction Game({row, col, gridClickListener, gridRightClickListener}: GameProp) {\r\n\tconst tdWidth: number = width / col;\r\n\tconst tdHeight: number = height / row;\r\n\tconst TableItems: JSX.Element[] = [];\r\n\r\n\tfor (let ypos = 0; ypos < row; ypos++) {\r\n\t\tconst trItems : JSX.Element[] = [];\r\n\r\n\t\tfor (let xpos = 0; xpos < col; xpos++) {\r\n\t\t\tconst tdElement : JSX.Element = <td\r\n\t\t\t\theight={`${tdHeight}`}\r\n\t\t\t\twidth={`${tdWidth}`}\r\n\t\t\t\tid={`${ypos}_${xpos}`}\r\n\t\t\t\tkey={`${ypos}_${xpos}`}\r\n\t\t\t\tonContextMenu={e => gridRightClickListener(e)}\r\n\t\t\t\tonClick={e => gridClickListener(e.currentTarget, 1)}\r\n\t\t\t>\r\n\t\t\t\t<span custom-value={`${MineSweeperData[ypos][xpos]}`} />\r\n\t\t\t</td>;\r\n\r\n\t\t\ttrItems.push(tdElement);\r\n\t\t}\r\n\t\tTableItems.push(\r\n\t\t\t<tr key={ypos}>\r\n\t\t\t\t{trItems}\r\n\t\t\t</tr>,\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<table>\r\n\t\t\t<tbody>\r\n\t\t\t\t{TableItems}\r\n\t\t\t</tbody>\r\n\t\t</table>\r\n\t);\r\n}\r\n\r\n\r\nexport default Game;\r\n","export interface gameDefaultDataInterface {\n  selectLevel: string;\n  row: number;\n  col: number;\n  MineCnt: number;\n}\nexport interface gameDataInterface {\n  flagCnt: number;\n  blankCnt: number;\n}\nexport interface customDataInterface {\n  row: number;\n  col: number;\n  MineCnt: number;\n}\nexport interface gameProcessDataInterface {\n  isGameStart: boolean;\n  isGameOver: boolean;\n  isPlayerWinGame: boolean;\n}\nexport const initGameDefaultData: gameDefaultDataInterface = {\n\tselectLevel: \"초급\",\n\trow: 10,\n\tcol: 10,\n\tMineCnt: 10,\n};\nexport const initGameData: gameDataInterface = {\n\tflagCnt: 10,\n\tblankCnt: 0,\n};\nexport const initCustomData: customDataInterface = {\n\trow: 10,\n\tcol: 10,\n\tMineCnt: 10,\n};\nexport const initgameProcessData: gameProcessDataInterface = {\n\tisGameStart: false,\n\tisGameOver: false,\n\tisPlayerWinGame: false,\n};\n","import React, {useEffect, useState} from \"react\";\r\nimport CustomGameDataField from \"./Screens/CustomGameDataField\";\r\nimport \"./MineSweeper.css\";\r\nimport {createMineSweeperData} from \"./static/MineSweeperData\";\r\nimport Selection from \"./Screens/Selection\";\r\nimport StartBtn from \"./Screens/StartBtn\";\r\nimport GameInfo from \"./Screens/GameInfo\";\r\nimport Game from \"./Screens/Game\";\r\nimport {customDataInterface, gameDataInterface, gameDefaultDataInterface, gameProcessDataInterface, initCustomData, initGameData, initGameDefaultData, initgameProcessData} from \"./static/HookStateData\";\r\nimport {dir, levels} from \"./static/StaticData\";\r\n\r\nfunction MineSweeper() {\r\n\tconst [gameData, setGameData]: [gameDataInterface, Function] = useState(initGameData);\r\n\tconst [time, setTime] : [number, Function] = useState(0);\r\n\tconst [gameDefaultData, setGameDefaultData]: [gameDefaultDataInterface, Function] = useState(initGameDefaultData);\r\n\tconst [customData, setCustomData]: [customDataInterface, Function] = useState(initCustomData);\r\n\tconst [gameProcessData, setGameProcessData]: [gameProcessDataInterface, Function] = useState(initgameProcessData);\r\n\r\n\t// 시간 경과 체크를 위한 useEffect\r\n\tuseEffect(() => {\r\n\t\tif (!gameProcessData.isGameStart) return undefined;\r\n\t\tconst tick = setTimeout(() => {\r\n\t\t\tsetTime(time + 1);\r\n\t\t}, 1000);\r\n\r\n\t\t// eslint-disable-next-line consistent-return\r\n\t\treturn () => clearTimeout(tick);\r\n\t}, [time, gameProcessData]);\r\n\t// 게임 성공을 체크하기 위한 useEffect\r\n\tuseEffect(() => {\r\n\t\tconst checkGameSuccess: () => boolean = () => {\r\n\t\t\tconst gridCnt: number = gameDefaultData.row * gameDefaultData.col;\r\n\t\t\tconst isMineFinedAll: boolean = gridCnt - gameData.blankCnt === gameDefaultData.MineCnt;\r\n\r\n\t\t\treturn isMineFinedAll;\r\n\t\t};\r\n\r\n\t\tif (checkGameSuccess() && !gameProcessData.isPlayerWinGame) {\r\n\t\t\tsetGameProcessData({\r\n\t\t\t\t...gameProcessData,\r\n\t\t\t\tisGameOver: true,\r\n\t\t\t\tisPlayerWinGame: true,\r\n\t\t\t});\r\n\t\t}\r\n\t}, [gameProcessData, gameData, gameDefaultData]);\r\n\t// 게임이 끝난 이후 alert를 위한 useEffect\r\n\tuseEffect(() => {\r\n\t\tif (!gameProcessData.isGameOver) return;\r\n\t\tif (gameProcessData.isGameOver) {\r\n\t\t\tif (gameProcessData.isPlayerWinGame) {\r\n\t\t\t\talert(\"모든 폭탄을 찾아냈다! 최고야!\");\r\n\t\t\t} else {\r\n\t\t\t\talert(\"저런 폭탄을 밟아버렸네 ㅠㅠ\");\r\n\t\t\t}\r\n\t\t\tsetGameProcessData({\r\n\t\t\t\t...initgameProcessData,\r\n\t\t\t});\r\n\t\t\tsetGameData({\r\n\t\t\t\t...initGameData,\r\n\t\t\t});\r\n\t\t\tsetCustomData({\r\n\t\t\t\t...initCustomData,\r\n\t\t\t});\r\n\t\t\tsetTime(0);\r\n\t\t}\r\n\t}, [gameProcessData, gameData, gameDefaultData, time]);\r\n\r\n\tconst onLevelChangeListener = (newLevel: string) => {\r\n\t\tconst [newRow, newCol, newMineAndFlagCnt]: Array<number> = levels[newLevel];\r\n\r\n\t\tsetGameDefaultData({\r\n\t\t\tselectLevel: `${newLevel}`,\r\n\t\t\trow: newRow,\r\n\t\t\tcol: newCol,\r\n\t\t\tMineCnt: newMineAndFlagCnt,\r\n\t\t});\r\n\t\tsetGameData({\r\n\t\t\t...gameData,\r\n\t\t\tflagCnt: newMineAndFlagCnt,\r\n\t\t});\r\n\t};\r\n\r\n\tconst checkValidGame: () => boolean = () => {\r\n\t\tconst isMineCntOver: number = customData.row * customData.col - customData.MineCnt;\r\n\r\n\t\treturn isMineCntOver > 0;\r\n\t};\r\n\r\n\tconst onStartBtnClickListener = () => {\r\n\t\tif (gameDefaultData.selectLevel === \"사용자 설정\") {\r\n\t\t\tif (!checkValidGame()) {\r\n\t\t\t\talert(\"너무 지뢰가 많아요!!\");\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcreateMineSweeperData(customData.row, customData.col, customData.MineCnt);\r\n\t\t\tsetGameDefaultData({\r\n\t\t\t\t...gameDefaultData,\r\n\t\t\t\trow: customData.row,\r\n\t\t\t\tcol: customData.col,\r\n\t\t\t\tMineCnt: customData.MineCnt,\r\n\t\t\t});\r\n\t\t\tsetGameData({\r\n\t\t\t\t...gameData,\r\n\t\t\t\tflagCnt: customData.MineCnt,\r\n\t\t\t});\r\n\t\t\tsetGameProcessData({\r\n\t\t\t\t...gameProcessData,\r\n\t\t\t\tisGameStart: true,\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcreateMineSweeperData(gameDefaultData.row, gameDefaultData.col, gameDefaultData.MineCnt);\r\n\t\tsetGameProcessData({\r\n\t\t\t...gameProcessData,\r\n\t\t\tisGameStart: true,\r\n\t\t});\r\n\t};\r\n\r\n\tconst gridRightClickListener = (e: Event) => {\r\n\t\tif (e.currentTarget === null) return;\r\n\t\te.preventDefault();\r\n\t\tconst target = e.currentTarget as HTMLElement;\r\n\r\n\t\tif (gameData.flagCnt <= 0 || target.innerText === \"🚩\" || target.style.backgroundColor === \"white\") return;\r\n\t\ttarget.innerText = `🚩`;\r\n\t\tsetGameData({\r\n\t\t\t...gameData,\r\n\t\t\tflagCnt: gameData.flagCnt - 1,\r\n\t\t});\r\n\t};\r\n\r\n\tconst gridClickListener = (currentTarget: HTMLElement) => {\r\n\t\tconst isClicked: boolean = currentTarget.style.backgroundColor === \"white\";\r\n\t\tconst isRightClicked: boolean = currentTarget.innerText === \"🚩\";\r\n\r\n\t\tif (isClicked || isRightClicked) return 0;\r\n\t\tcurrentTarget.style.backgroundColor = \"white\";\r\n\t\tconst textNodeElement = currentTarget.childNodes[0] as Element;\r\n\t\tconst textNodeHTMLElement = currentTarget.childNodes[0] as HTMLElement;\r\n\r\n\t\ttextNodeHTMLElement.innerText = textNodeElement.getAttribute(\"custom-value\")!;\r\n\t\tif (textNodeHTMLElement.innerText === \"💣\") {\r\n\t\t\tsetGameProcessData({\r\n\t\t\t\t...gameProcessData,\r\n\t\t\t\tisGameOver: true,\r\n\t\t\t});\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tconst clickedCnt: number = 1;\r\n\r\n\t\tif (textNodeHTMLElement.innerText === \"0\") {\r\n\t\t\ttextNodeHTMLElement.innerText = \"\";\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tconst idName : Array<string> = currentTarget.id.split(\"_\");\r\n\t\t\t\tconst ypos : number = parseInt(idName[0], 10);\r\n\t\t\t\tconst xpos : number = parseInt(idName[1], 10);\r\n\r\n\t\t\t\tdir.forEach(value => {\r\n\t\t\t\t\tconst ny = value[0] + ypos;\r\n\t\t\t\t\tconst nx = value[1] + xpos;\r\n\r\n\t\t\t\t\tif (ny >= 0 && ny < gameDefaultData.row && nx >= 0 && nx < gameDefaultData.col) {\r\n\t\t\t\t\t\tconst nextNode : HTMLElement = document.getElementById(`${ny}_${nx}`)!;\r\n\r\n\t\t\t\t\t\tif (nextNode.innerText !== \"🚩\") {\r\n\t\t\t\t\t\t\tconst nextTextNode = nextNode.childNodes[0] as Element;\r\n\r\n\t\t\t\t\t\t\tif (nextTextNode.getAttribute(\"custom-value\") !== \"💣\") {\r\n\t\t\t\t\t\t\t\tgridClickListener(nextNode);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}, 10);\r\n\t\t}\r\n\t\tsetGameData({\r\n\t\t\t...gameData,\r\n\t\t\tblankCnt: gameData.blankCnt + clickedCnt,\r\n\t\t});\r\n\t\treturn true;\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<header id=\"header\">\r\n\t\t\t\t<h1>지뢰찾기</h1>\r\n\t\t\t</header>\r\n\t\t\t<nav id=\"nav\">\r\n\t\t\t\t<Selection\r\n\t\t\t\t\tcurrentLevel={gameDefaultData.selectLevel}\r\n\t\t\t\t\tonLevelChangeListener={onLevelChangeListener}\r\n\t\t\t\t/>\r\n\t\t\t\t{\r\n\t\t\t\t\t(gameDefaultData.selectLevel === \"사용자 설정\" && gameProcessData.isGameStart !== true) &&\r\n                    <CustomGameDataField\r\n                    \tcustomData={customData}\r\n                    \tonChangeListener={setCustomData}\r\n                    />\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\tgameProcessData.isGameStart === true &&\r\n                    <GameInfo\r\n                    \tgameData={gameData}\r\n                    \tgameDefaultData={gameDefaultData}\r\n                    \ttime={time}\r\n                    />\r\n\t\t\t\t}\r\n\t\t\t\t<StartBtn\r\n\t\t\t\t\tonStartBtnClickListener={onStartBtnClickListener}\r\n\t\t\t\t/>\r\n\t\t\t</nav>\r\n\t\t\t<section>\r\n\t\t\t\t{\r\n\t\t\t\t\tgameProcessData.isGameStart === true &&\r\n                    <Game\r\n                    \trow={gameDefaultData.row}\r\n                    \tcol={gameDefaultData.col}\r\n                    \tgridRightClickListener={gridRightClickListener}\r\n                    \tgridClickListener={gridClickListener}\r\n                    />\r\n\t\t\t\t}\r\n\t\t\t</section>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n\r\nexport default MineSweeper;\r\n","import React from \"react\";\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Todo from \"./components/Todo/Todo\";\nimport MineSweeper from \"./components/MineSweeper/MineSweeper\";\n\n\nfunction App() {\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/todo\">\n\t\t\t\t\t<Todo />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/MineSweeper\">\n\t\t\t\t\t<MineSweeper />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t<Home />\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import {ReportHandler} from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n\tif (onPerfEntry && onPerfEntry instanceof Function) {\n\t\timport(\"web-vitals\").then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n\t\t\tgetCLS(onPerfEntry);\n\t\t\tgetFID(onPerfEntry);\n\t\t\tgetFCP(onPerfEntry);\n\t\t\tgetLCP(onPerfEntry);\n\t\t\tgetTTFB(onPerfEntry);\n\t\t});\n\t}\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}